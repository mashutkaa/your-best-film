{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;UCTA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;AACA,qBAAqB,mBAAO,CAAC,8CAAe;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,UAAU;AAC9D;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,iBAAiB;;AAElE;;AAEA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,IAAI,gCAAgC;AACrE;AACA,gDAAgD,OAAO;AACvD;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,6FAA6F,WAAW;AACxG;AACA,cAAc;AACd,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B,iBAAiB;AAC3C,mEAAmE,EAAE;AACrE,2DAA2D;AAC3D;;AAEA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA,wBAAwB,eAAe;AACvC,2EAA2E,oBAAoB,mBAAmB,EAAE,eAAe,EAAE;AACrI,+BAA+B,eAAe;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2FAA2F,OAAO;AAClG;AACA,cAAc;AACd,wBAAwB,OAAO;AAC/B;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,+CAA+C;AAC/C;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,0CAA0C,MAAM,iBAAiB;AACjE,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,OAAO;AACP,0EAA0E;AAC1E,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA,iEAAiE;AACjE,GAAG;;AAEH;AACA,iEAAiE;AACjE,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wCAAwC;;AAExC;;AAEA;AACA;AACA;AACA,iDAAiD,uBAAuB;AACxE;;AAEA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,KAAK;;AAEL;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,iBAAiB;;AAE/B;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,UAAU;AAChC;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,aAAa,KAAK,YAAY;;AAExD;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,UAAU;AAChC;AACA;;AAEA;AACA;AACA;;AAEA,gCAAgC,UAAU,gBAAgB,UAAU;AACpE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8BAA8B,EAAE;AAChC;AACA;AACA,8BAA8B,EAAE;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8DAA8D,eAAe;AAC7E;AACA;AACA,+DAA+D,YAAY;AAC3E;;AAEA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,oBAAoB;AACpB;;AAEA,iBAAiB;AACjB;;AAEA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,CAAC","sources":["webpack://yourbestfilm/./src/js/result_page.js","webpack://yourbestfilm/webpack/bootstrap","webpack://yourbestfilm/./src/js/script.js"],"sourcesContent":["function printResults() {\n    this.test = function() {\n        console.log('Ура! Файли успішно розділені');\n    }\n    this.openResults = function(recommendations) {\n        // відкриття нової сторінки та виведення результатів на ній\n    }\n}\n\nmodule.exports = printResults;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// запитання\nconst printResults = require('./result_page');\n\nconst printNewResults = new printResults();\n\nconst shortQuestions = [\n  {\n    type: \"radio-mood\",\n    question: \"Який настрій у вас сьогодні?\",\n    answers: [\"Чудовий\", \"Нудно\", \"Сумний\", \"Втомлений\"],\n    img: [\n      \"img/5307603774627505126 1@2x.png\",\n      \"img/5307603774627505123 1@2x.png\",\n      \"img/5307603774627505125 1@2x.png\",\n      \"img/5307603774627505124 1@2x.png\",\n    ],\n    needs: true,\n  },\n\n  {\n    type: \"range\",\n    question: \"Оберіть тривалість фільму\",\n    answers: [\"0 хв\", \"1 год.\", \"3 год.\", \"5 год.\", \"7 год.\"],\n    needs: true,\n  },\n\n  {\n    type: \"radio\",\n    question: \"З ким переглядатимете фільм?\",\n    answers: [\n      \"Наодинці\",\n      \"З друзями\",\n      \"З другою половинкою\",\n      \"З родиною (разом з дітьми)\",\n    ],\n    needs: true,\n  },\n\n  {\n    type: \"input-fields\",\n    question: \"Роки виходу фільму\",\n    answers: [\"Не раніше\", \"Не пізніше\"],\n    placeholder: [\"1950\", \"Поточний рік\"],\n    needs: false,\n  },\n\n  {\n    type: \"option\",\n    question: \"У якому жанрі шукатимемо фільм?\",\n    answers:\n      \"Драма, комедія, бойовик, трилер, жахи, фантастика, фентезі, пригоди, мелодрама, документальний фільм, вестерн, історичний фільм, кримінал, мюзикл, анімаційний фільм, спортивний фільм, сімейний фільм, комедійний бойовик, науково-фантастичний трилер, романтична фантастика, пригодницьке фентезі\",\n    default: \"Вибрати жанр\",\n    needs: false,\n  },\n];\n\nwindow.addEventListener(\"DOMContentLoaded\", function () {\n  // ---------------------------- Модальне вікно\n\n  const modalTrigger = document.querySelectorAll(\"[data-modal]\"),\n    modal = document.querySelector(\".modal\"),\n    modalOverlay = document.querySelector(\".modal-overlay\"),\n    modalCloseBtn = document.querySelector(\"[data-close]\");\n\n  //відкрити модалку\n  function openModal() {\n    modal.classList.add(\"show\");\n    modalOverlay.classList.add(\"show\");\n    document.body.style.overflow = \"hidden\"; // Заблокувати прокручування\n  }\n  // Закрити модалку\n  function closeModal() {\n    modal.classList.remove(\"show\");\n    modalOverlay.classList.remove(\"show\");\n    document.body.style.overflow = \"\"; // Відновити прокручування\n  }\n\n  const formContainer = document.querySelector(\".form\");\n  \n\n  // function cleanFormContainer() {\n  //   formContainer.classList.remove('hide');\n  //   formContainer.classList.add('show');\n  // }\n\n  // Обробники подій для кнопок\n  modalTrigger.forEach((btn) => {\n    btn.addEventListener(\"click\", openModal);\n  });\n\n  modalCloseBtn.addEventListener(\"click\", closeModal);\n\n  // Закриття модалки при натисканні на оверлей\n  modalOverlay.addEventListener(\"click\", closeModal);\n\n  // Закриття модалки при натисканні клавіші Escape\n  document.addEventListener(\"keydown\", (e) => {\n    if (e.code === \"Escape\" && modal.classList.contains(\"show\")) {\n      closeModal();\n    }\n  });\n  // ---------------------------- Модальне вікно\n\n  // Коротке опитуванняі\n\n  formContainer.innerHTML = \"\";\n\n  showQuestion(shortQuestions);\n\n  // Показати запитання\n  function showQuestion(questions) {\n    console.log(\"showQuestion\");\n\n    questions.forEach((element, index) => {\n      const headerContainer = document.createElement(\"div\");\n      headerContainer.classList.add(\"question-wrapper\");\n\n      //номер запитання\n      const numberTemplate = `<div class=\"question-number-container\">\n                    <span class=\"question-number\">${index + 1}</span>\n                </div>      `;\n      headerContainer.innerHTML = numberTemplate;\n\n      const questionContainer = document.createElement(\"div\");\n      questionContainer.classList.add(\"question-item\");\n\n      // перевірка чи обов'язкове запитання та виведення назви запитання\n      let questionTemplate = \"\";\n\n      if (element.needs) {\n        questionTemplate += `<p class=\"required-field\">*поле обов’язкове</p>`;\n      }\n      questionTemplate += `<p class=\"question\">${element.question}</p>`;\n\n      questionContainer.innerHTML = questionTemplate;\n\n      //  відповіді\n      switch (element[\"type\"]) {\n        case \"radio-mood\": {\n          const { img, answers } = element;\n          const lengthArray = answers.length;\n\n          const moodWrapper = document.createElement(\"div\");\n          questionContainer.appendChild(moodWrapper);\n          moodWrapper.classList = \"mood-options\";\n\n          let isMoodDefault;\n          for (let i = 0; i < lengthArray; i++) {\n            const savedMood = localStorage.getItem(\"radioMood\");\n            if (savedMood) {\n              isMoodDefault = answers[i] === savedMood;\n            } else {\n              isMoodDefault = answers[i] === \"Чудовий\";\n            }\n            const answerTemplate = `\n                            <label class=\"mood-option\">\n                                <input type=\"radio\" name=\"mood\" value=\"${\n                                  answers[i]\n                                }\" ${isMoodDefault ? \"checked\" : \"\"} />\n                                <div class=\"icon\">\n                                    <img src=\"${img[i]}\" alt=\"\" />\n                                </div>\n                                <span>${answers[i]}</span>\n                            </label>`;\n            moodWrapper.innerHTML += answerTemplate;\n          }\n\n          break;\n        }\n\n        case \"radio\": {\n          let isPartnerDefault;\n          for (let answerText of element.answers) {\n            const savedValue = localStorage.getItem(\"radio\");\n            if (savedValue) {\n              isPartnerDefault = answerText === savedValue;\n            } else {\n              isPartnerDefault = answerText === \"Наодинці\";\n            }\n\n            const answerTemplate = `\n            <label class=\"radio-button-label\">\n                <input class=\"radio-button-field\" type=\"radio\" name=\"movie-partner\" value=\"${answerText}\" ${\n              isPartnerDefault ? \"checked\" : \"\"\n            } />\n                <span>${answerText}</span>\n            </label>`;\n            questionContainer.innerHTML += answerTemplate;\n          }\n          break;\n        }\n\n        case \"range\": {\n          const sliderTemplate = `   <div class = \"slider-group\">\n                            <input id=\"lower-slider\" class=\"lower-range-slider\" type=\"range\" min=\"0\" max=\"7\" step=\"1\" value=\"0\" required />\n                            <input id=\"upper-slider\" class=\"upper-range-slider\" type=\"range\" min=\"0\" max=\"7\" step=\"1\" value=\"7\" required />\n                        </div>\n                        <div class=\"slider-labels\"></div>`;\n          questionContainer.innerHTML += sliderTemplate;\n\n          const sliderContainer =\n            questionContainer.querySelector(\".slider-labels\");\n\n          element.answers.forEach((labelText, index) => {\n            const labelElement = document.createElement(\"span\");\n            labelElement.textContent = labelText;\n\n            sliderContainer.appendChild(labelElement);\n          });\n\n          break;\n        }\n\n        case \"input-fields\": {\n          const answerArray = element.answers;\n          const placeholderArray = element.placeholder;\n          const lengthArray = answerArray.length;\n\n          const savedValues = [];\n\n          // Спочатку відновлюємо збережені значення з localStorage\n          for (let i = 0; i < lengthArray; i++) {\n            const savedValue = localStorage.getItem(`input-field-${i}`);\n            savedValues[i] = savedValue ? savedValue : \"\"; // Якщо значення є, зберігаємо його, якщо ні - порожній рядок\n          }\n\n          // Створюємо інпут-поля\n          for (let i = 0; i < lengthArray; i++) {\n            const answerTemplate = `\n              <label class=\"input-field-label\">\n                <span>${answerArray[i]}</span>\n                <input class=\"text-input-field\" type=\"text\" placeholder=\"${placeholderArray[i]}\" name=\"year-min-${i}\" pattern=\"\\\\d{4}\"\n                      value=\"${savedValues[i]}\" /> <!-- Підставляємо значення із savedValues -->\n              </label>\n            `;\n\n            questionContainer.innerHTML += answerTemplate;\n          }\n\n          break;\n        }\n\n        case \"option\": {\n          const options = element.answers\n            .split(\", \")\n            .map((e) => e[0].toUpperCase() + e.slice(1));\n\n          const checkboxWrapper = document.createElement(\"div\");\n          checkboxWrapper.className = \"checkbox-options\";\n\n          const savedOptions = localStorage.getItem(\"selectedOptions\");\n          const savedOptionsArray = savedOptions ? savedOptions.split(\",\") : [];\n\n          options.forEach((option) => {\n            const isChecked = savedOptionsArray.includes(option);\n\n            const answerTemplate = ` \n              <label class=\"checkbox-button-label\">\n                <input class=\"checkbox-button-field\" type=\"checkbox\" name=\"genre\" value=\"${option}\" ${\n              isChecked ? \"checked\" : \"\"\n            } />\n                <span>${option}</span>\n              </label>`;\n            checkboxWrapper.innerHTML += answerTemplate;\n          });\n\n          questionContainer.appendChild(checkboxWrapper);\n          break;\n        }\n      }\n\n      formContainer.appendChild(headerContainer);\n      headerContainer.appendChild(questionContainer);\n    });\n  }\n\n  // local Storage\n\n  const radioImgs = document.querySelectorAll(\n    '.mood-option input[type=\"radio\"]'\n  ); // Отримуємо всі радіокнопки\n  radioImgs.forEach((radio) => {\n    radio.addEventListener(\"change\", (event) => {\n      const selectedMood = event.target.value; // Отримуємо значення вибраного елемента\n      localStorage.setItem(\"radioMood\", selectedMood);\n    });\n  });\n\n  const radioFields = document.querySelectorAll(\".radio-button-field\");\n  radioFields.forEach((radio) => {\n    radio.addEventListener(\"change\", (event) => {\n      const selectedRadio = event.target.value;\n      localStorage.setItem(\"radio\", selectedRadio);\n    });\n  });\n\n  const inputFields = document.querySelectorAll(\".text-input-field\");\n  inputFields.forEach((input, index) => {\n    input.addEventListener(\"input\", () => {\n      localStorage.setItem(`input-field-${index}`, input.value); // Зберігаємо значення у localStorage\n    });\n  });\n\n  const checkboxFields = document.querySelectorAll(\".checkbox-button-field\");\n  checkboxFields.forEach((checkbox) => {\n    checkbox.addEventListener(\"change\", () => {\n      const selectedOptions = [];\n      checkboxFields.forEach((checkbox) => {\n        if (checkbox.checked) {\n          selectedOptions.push(checkbox.value); // Додаємо вибрані значення в масив\n        }\n      });\n      localStorage.setItem(\"selectedOptions\", selectedOptions.join(\",\")); // Зберігаємо вибрані опції як рядок, розділений комами\n    });\n  });\n\n  const lowerSlider = document.querySelector(\"#lower-slider\");\n  const upperSlider = document.querySelector(\"#upper-slider\");\n\n  lowerSlider.addEventListener(\"input\", () => {\n    localStorage.setItem(\"lowerSliderValue\", lowerSlider.value); // Зберігаємо значення нижнього слайдера\n  });\n\n  upperSlider.addEventListener(\"input\", () => {\n    localStorage.setItem(\"upperSliderValue\", upperSlider.value); // Зберігаємо значення верхнього слайдера\n  });\n\n  // кнопка для відправки результатів\n  const submitButton = document.createElement(\"button\");\n  submitButton.classList.add(\"button\", \"submit-btn\");\n  submitButton.type = \"submit\";\n  submitButton.textContent = \"Отримати добірку фільмів\";\n\n  formContainer.appendChild(submitButton);\n\n  let result = [];\n\n  // повідомлення про статус обробки відповідей користувача\n  const message = {\n    loading: '../src/icons/spinner.svg',\n    errorInLoading: 'Вибачте, на жаль, сталася помилка',\n  }\n\n  // повідомлення про помилку\n\n  function errorMessage() {\n  const formWrapper = document.querySelector('.form-wrapper');\n    formWrapper.classList.add('hide');  // Ховаємо опитування\n\n    const modalContainer = document.querySelector('.modal-wrapper');\n\n    // Створити контейнер для помилки\n    const errorContainer = document.createElement(\"div\");\n    errorContainer.classList.add(\"question-item\");\n    const errorTemplate = `<p class=\"question\">${message.errorInLoading}</p>`;\n    errorContainer.innerHTML += errorTemplate;\n\n    modalContainer.appendChild(errorContainer);\n\n    modalCloseBtn.addEventListener(\"click\", () => {\n      errorContainer.remove();  // Видаляємо помилку\n      formWrapper.classList.remove('hide');\n      closeModal();\n      showQuestion(shortQuestions);\n    });\n\n    //const copyFormContainer = formContainer;\n\n\n  }\n\n  // запит до gpt\n  async function getMovieRecommendations(sandbox = true) {\n    console.log(\"Відправка запиту...\");\n\n    const spinnerContainer = document.createElement('div');\n    spinnerContainer.id = 'spinner-container';\n\n    const spinnerImg = document.createElement('img');\n    spinnerImg.src = message.loading;\n    spinnerImg.alt = 'Loading...';\n    spinnerContainer.appendChild(spinnerImg);\n    document.body.appendChild(spinnerContainer);\n\n    try {\n      const requestBody = {\n        result: result,\n        sandbox: sandbox,\n      };\n\n      const response = await fetch(\n        \"http://localhost:3000/api/getMovieRecommendations\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(requestBody),\n        }\n      );\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.log(\"Error: \" + errorText);\n        errorMessage();\n        return;\n      }\n      // recommendations - масив з об'єктами\n      const recommendations = await response.json();\n      closeModal();\n      console.log(recommendations); // вивід добірки в консоль\n      printNewResults.openResults(recommendations);\n      // має виводитися на окрему сторінку\n    } \n\n    catch (error) { \n      console.error('Помилка при завантаженні:', error);\n      errorMessage();\n      return;\n    }\n\n    finally {\n      spinnerContainer.remove();\n    }\n  }\n\n  function sendResults(questions) {\n    questions.forEach((element) => {\n      const { type, question } = element;\n\n      let answer = \"\";\n\n      switch (type) {\n        case \"radio-mood\": {\n          const getAnswer =\n            document.querySelector('input[name=\"mood\"]:checked')?.value || null;\n\n          answer = `${getAnswer}`;\n          break;\n        }\n\n        case \"range\": {\n          const answerLower = document.querySelector(\"#lower-slider\").value;\n          const answerUpper = document.querySelector(\"#upper-slider\").value;\n\n          answer = `Від ${answerLower} до ${answerUpper}`;\n\n          break;\n        }\n\n        case \"radio\": {\n          const getAnswer =\n            document.querySelector('input[name=\"movie-partner\"]:checked')\n              ?.value || null;\n\n          answer = `${getAnswer}`;\n          break;\n        }\n\n        case \"input-fields\": {\n          const answerMin = document.querySelector(\"#year-min\")?.value || \"не вказано\";\n          const answerMax = document.querySelector(\"#year-max\")?.value || \"не вказано\";\n\n          answer = `Не раніше ${answerMin}, не пізніше: ${answerMax}`;\n          break;\n        }\n\n        case \"checkbox\": {\n          const selectedGenres = Array.from(\n            document.querySelectorAll('input[name=\"genre\"]:checked')\n          ).map((checkbox) => checkbox.value);\n\n          if (selectedGenres.length === 0) {\n            answer = element.answers\n              .split(\", \")\n              .map((e) => e[0].toUpperCase() + e.slice(1))\n              .join(\", \");\n          } else {\n            answer = selectedGenres.join(\", \");\n          }\n          break;\n        }\n      }\n\n      const newUserAnswer = {\n        question: question,\n        answer: answer,\n      };\n      result.push(newUserAnswer);\n    });\n\n    console.log(result);\n    getMovieRecommendations(sandbox=false);\n  }\n\n  const errorInputMin = document.querySelector(\".error-input-min\");\n  const errorInputMax = document.querySelector(\".error-input-max\");\n  const yearInputMin = document.querySelector(\"#year-min\");\n  const yearInputMax = document.querySelector(\"#year-max\");\n\n  // ВАЛІДАЦІЯ\n  function validateYears() {\n    const yearMin = document.querySelector('input[name=\"year-min-0\"]');\n    const yearMax = document.querySelector('input[name=\"year-min-1\"]');\n\n    const yearMinValue = yearMin.value.trim();\n    const yearMaxValue = yearMax.value.trim();\n    const currentYear = new Date().getFullYear();\n    const defaultMinYear = 1950;\n\n    let errorMessages = [];\n\n    // Перевірка: чи введене значення містить рівно 4 цифри\n    if (yearMinValue && !/^\\d{4}$/.test(yearMinValue)) {\n      errorMessages.push(\"Рік введено некоректно (має містити 4 цифри)\");\n    }\n    if (yearMaxValue && !/^\\d{4}$/.test(yearMaxValue)) {\n      errorMessages.push(\"Рік введено некоректно (має містити 4 цифри)\");\n    }\n\n    // Перевірка: чи порядок років коректний\n    if (\n      yearMinValue &&\n      yearMaxValue &&\n      parseInt(yearMinValue) >= parseInt(yearMaxValue)\n    ) {\n      errorMessages.push(\"Перший рік має бути меншим за другий\");\n    }\n\n    // Перевірка: чи відповідають роки заданим межам\n    if (yearMinValue && parseInt(yearMinValue) < defaultMinYear) {\n      errorMessages.push(`Перший рік не може бути меншим за ${defaultMinYear}`);\n    }\n    if (yearMaxValue && parseInt(yearMaxValue) > currentYear) {\n      errorMessages.push(`Другий рік не може бути більшим за ${currentYear}`);\n    }\n\n    // Виведення помилок\n    const errorContainer = document.querySelector(\".error-message-container\");\n    errorContainer.innerHTML = \"\"; // Очищення контейнера для помилок\n    if (errorMessages.length > 0) {\n      errorMessages.forEach((message) => {\n        const errorMessage = document.createElement(\"p\");\n        errorMessage.classList.add(\"error-message\");\n        errorMessage.textContent = message;\n        errorContainer.appendChild(errorMessage);\n      });\n      return false; // Якщо є помилки, форма не буде відправлена\n    }\n\n    return true; // Якщо помилок немає\n  }\n\n  submitButton.addEventListener(\"click\", (event) => {\n    event.preventDefault(); // Зупинити відправку форми за замовчуванням\n\n    sendResults(shortQuestions);\n    localStorage.clear();\n    // if (validateYears()) {\n    //   sendResults(shortQuestions);\n    //   localStorage.clear();\n    // }\n  });\n\n});\n"],"names":[],"sourceRoot":""}